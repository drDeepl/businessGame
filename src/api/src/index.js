/**
 * NinjaExtraAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AccountAmountSchema from './model/AccountAmountSchema';
import AccountOut from './model/AccountOut';
import CreateTeamSchema from './model/CreateTeamSchema';
import CreateUserSchema from './model/CreateUserSchema';
import Detail from './model/Detail';
import PlayerTeamSchema from './model/PlayerTeamSchema';
import ProductIn from './model/ProductIn';
import ProductKitIn from './model/ProductKitIn';
import ProductKitOut from './model/ProductKitOut';
import ProductOut from './model/ProductOut';
import PurchaseDoneOut from './model/PurchaseDoneOut';
import PurchaseOfferOut from './model/PurchaseOfferOut';
import PurchaseOfferPlace from './model/PurchaseOfferPlace';
import SaleDoneOut from './model/SaleDoneOut';
import SaleOfferOut from './model/SaleOfferOut';
import SaleOfferPlace from './model/SaleOfferPlace';
import StoreProductKitOut from './model/StoreProductKitOut';
import StoreProductOut from './model/StoreProductOut';
import TeamOutSchema from './model/TeamOutSchema';
import TokenObtainPairOutput from './model/TokenObtainPairOutput';
import TokenObtainPairSerializer from './model/TokenObtainPairSerializer';
import TokenRefreshSchema from './model/TokenRefreshSchema';
import TokenRefreshSerializer from './model/TokenRefreshSerializer';
import TokenVerifySerializer from './model/TokenVerifySerializer';
import TransactionOut from './model/TransactionOut';
import TransferSchema from './model/TransferSchema';
import UpdateUserSchema from './model/UpdateUserSchema';
import UserOut from './model/UserOut';
import AccountApi from './api/AccountApi';
import OfferApi from './api/OfferApi';
import ProductApi from './api/ProductApi';
import ProductKitApi from './api/ProductKitApi';
import StoreApi from './api/StoreApi';
import TeamApi from './api/TeamApi';
import TokenApi from './api/TokenApi';
import TransactionApi from './api/TransactionApi';
import UserApi from './api/UserApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var NinjaExtraApi = require('index'); // See note below*.
* var xxxSvc = new NinjaExtraApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new NinjaExtraApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new NinjaExtraApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new NinjaExtraApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AccountAmountSchema model constructor.
     * @property {module:model/AccountAmountSchema}
     */
    AccountAmountSchema,

    /**
     * The AccountOut model constructor.
     * @property {module:model/AccountOut}
     */
    AccountOut,

    /**
     * The CreateTeamSchema model constructor.
     * @property {module:model/CreateTeamSchema}
     */
    CreateTeamSchema,

    /**
     * The CreateUserSchema model constructor.
     * @property {module:model/CreateUserSchema}
     */
    CreateUserSchema,

    /**
     * The Detail model constructor.
     * @property {module:model/Detail}
     */
    Detail,

    /**
     * The PlayerTeamSchema model constructor.
     * @property {module:model/PlayerTeamSchema}
     */
    PlayerTeamSchema,

    /**
     * The ProductIn model constructor.
     * @property {module:model/ProductIn}
     */
    ProductIn,

    /**
     * The ProductKitIn model constructor.
     * @property {module:model/ProductKitIn}
     */
    ProductKitIn,

    /**
     * The ProductKitOut model constructor.
     * @property {module:model/ProductKitOut}
     */
    ProductKitOut,

    /**
     * The ProductOut model constructor.
     * @property {module:model/ProductOut}
     */
    ProductOut,

    /**
     * The PurchaseDoneOut model constructor.
     * @property {module:model/PurchaseDoneOut}
     */
    PurchaseDoneOut,

    /**
     * The PurchaseOfferOut model constructor.
     * @property {module:model/PurchaseOfferOut}
     */
    PurchaseOfferOut,

    /**
     * The PurchaseOfferPlace model constructor.
     * @property {module:model/PurchaseOfferPlace}
     */
    PurchaseOfferPlace,

    /**
     * The SaleDoneOut model constructor.
     * @property {module:model/SaleDoneOut}
     */
    SaleDoneOut,

    /**
     * The SaleOfferOut model constructor.
     * @property {module:model/SaleOfferOut}
     */
    SaleOfferOut,

    /**
     * The SaleOfferPlace model constructor.
     * @property {module:model/SaleOfferPlace}
     */
    SaleOfferPlace,

    /**
     * The StoreProductKitOut model constructor.
     * @property {module:model/StoreProductKitOut}
     */
    StoreProductKitOut,

    /**
     * The StoreProductOut model constructor.
     * @property {module:model/StoreProductOut}
     */
    StoreProductOut,

    /**
     * The TeamOutSchema model constructor.
     * @property {module:model/TeamOutSchema}
     */
    TeamOutSchema,

    /**
     * The TokenObtainPairOutput model constructor.
     * @property {module:model/TokenObtainPairOutput}
     */
    TokenObtainPairOutput,

    /**
     * The TokenObtainPairSerializer model constructor.
     * @property {module:model/TokenObtainPairSerializer}
     */
    TokenObtainPairSerializer,

    /**
     * The TokenRefreshSchema model constructor.
     * @property {module:model/TokenRefreshSchema}
     */
    TokenRefreshSchema,

    /**
     * The TokenRefreshSerializer model constructor.
     * @property {module:model/TokenRefreshSerializer}
     */
    TokenRefreshSerializer,

    /**
     * The TokenVerifySerializer model constructor.
     * @property {module:model/TokenVerifySerializer}
     */
    TokenVerifySerializer,

    /**
     * The TransactionOut model constructor.
     * @property {module:model/TransactionOut}
     */
    TransactionOut,

    /**
     * The TransferSchema model constructor.
     * @property {module:model/TransferSchema}
     */
    TransferSchema,

    /**
     * The UpdateUserSchema model constructor.
     * @property {module:model/UpdateUserSchema}
     */
    UpdateUserSchema,

    /**
     * The UserOut model constructor.
     * @property {module:model/UserOut}
     */
    UserOut,

    /**
    * The AccountApi service constructor.
    * @property {module:api/AccountApi}
    */
    AccountApi,

    /**
    * The OfferApi service constructor.
    * @property {module:api/OfferApi}
    */
    OfferApi,

    /**
    * The ProductApi service constructor.
    * @property {module:api/ProductApi}
    */
    ProductApi,

    /**
    * The ProductKitApi service constructor.
    * @property {module:api/ProductKitApi}
    */
    ProductKitApi,

    /**
    * The StoreApi service constructor.
    * @property {module:api/StoreApi}
    */
    StoreApi,

    /**
    * The TeamApi service constructor.
    * @property {module:api/TeamApi}
    */
    TeamApi,

    /**
    * The TokenApi service constructor.
    * @property {module:api/TokenApi}
    */
    TokenApi,

    /**
    * The TransactionApi service constructor.
    * @property {module:api/TransactionApi}
    */
    TransactionApi,

    /**
    * The UserApi service constructor.
    * @property {module:api/UserApi}
    */
    UserApi
};
